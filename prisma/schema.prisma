// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch","fullTextIndex"]
}

model Hotel{
  id                  String     @id @default(uuid())
  userId              String
  title               String     @db.Text
  description         String     @db.LongText
  image               String
  country             String
  state               String
  city                String
  locationDescription String     @db.LongText
  gym                 Boolean    @default(false)
  spa                 Boolean    @default(false)
  bar                 Boolean    @default(false)
  laundry             Boolean    @default(false)
  restaurant          Boolean    @default(false)
  shopping            Boolean    @default(false)
  freeParking         Boolean    @default(false)
  bikeRental          Boolean    @default(false)
  freeWifi            Boolean    @default(false)
  movieNights         Boolean    @default(false)
  swimmingPool        Boolean    @default(false)
  coffeeShop          Boolean    @default(false)
  addedAt             DateTime   @default(now())
  updatedAt           DateTime   @default(now())
  rooms               Room[]
  bookings            Booking[]

  @@fulltext([title])

}


model Room{
  id             String     @id @default(uuid())
  title          String
  description    String     @db.LongText
  bedCount       Int        @default(0)
  guestCount     Int        @default(0)
  kingBed        Int        @default(0)
  queenBed       Int        @default(0)
  image          String
  breakfastPrice Int
  roomPrice      Int
  roomService    Boolean    @default(false)
  TV             Boolean    @default(false)
  balcone        Boolean    @default(false)
  freeWifi       Boolean    @default(false)
  cityView       Boolean    @default(false)
  ocenaView      Boolean    @default(false)
  forestView     Boolean    @default(false)
  mountainView   Boolean    @default(false)
  airCondition   Boolean    @default(false)
  soundProofed   Boolean    @default(false)
  hotelId        String

  Hotel          Hotel?    @relation(fields: [hotelId], references: [id], onDelete: Cascade)
  Booking        Booking[]

  @@index([hotelId])
}

model Booking{
  id                String    @id @default(uuid())
  username          String
  userId            String
  hotelId           String
  roomId            String
  hotelOwnerId      String
  startData         DateTime
  endData           DateTime
  breakfastIncluded Boolean
  currency          String
  totalPrice        Int
  paymentStatus     Boolean   @default(false)
  paymentIntentId   String    @unique
  bookedAt          DateTime  @default(now())


  Hotel             Hotel?   @relation(fields: [hotelId], references: [id], onDelete: Cascade)
  Room              Room?    @relation(fields: [roomId], references: [id])

  @@index([hotelId])
  @@index([roomId])
}